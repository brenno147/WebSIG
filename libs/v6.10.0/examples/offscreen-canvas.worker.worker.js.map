{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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","sources":["webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/mapbox-to-css-font/index.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/util.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/math.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/extent/Corner.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/AssertionError.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/format/FormatType.js","webpack:///../src/ol/geom/GeometryLayout.js","webpack:///../src/ol/geom/GeometryType.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/has.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/source/State.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/color.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/style/TextPlacement.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/render/canvas/BuilderType.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/common.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/layer/VectorTileRenderType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/style/IconAnchorUnits.js","webpack:///../src/ol/style/IconOrigin.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/style/Text.js","webpack:///../../../node_modules/url/node_modules/punycode/punycode.js","webpack:///../../../node_modules/url/util.js","webpack:///../../../node_modules/querystring/decode.js","webpack:///../../../node_modules/querystring/encode.js","webpack:///../../../node_modules/querystring/index.js","webpack:///../../../node_modules/url/url.js","webpack:///../util/extend.js","webpack:///../expression/parsing_error.js","webpack:///../expression/scope.js","webpack:///../expression/types.js","webpack:///../../../node_modules/csscolorparser/csscolorparser.js","webpack:///../util/color.js","webpack:///../expression/types/collator.js","webpack:///../expression/types/formatted.js","webpack:///../expression/types/resolved_image.js","webpack:///../expression/values.js","webpack:///../expression/definitions/literal.js","webpack:///../expression/runtime_error.js","webpack:///../expression/definitions/assertion.js","webpack:///../expression/definitions/format.js","webpack:///../expression/definitions/image.js","webpack:///../expression/definitions/coercion.js","webpack:///../expression/evaluation_context.js","webpack:///../expression/compound_expression.js","webpack:///../expression/definitions/collator.js","webpack:///../expression/definitions/within.js","webpack:///../expression/is_constant.js","webpack:///../expression/definitions/var.js","webpack:///../expression/parsing_context.js","webpack:///../expression/stops.js","webpack:///../expression/definitions/step.js","webpack:///../../../node_modules/@mapbox/unitbezier/index.js","webpack:///../util/interpolate.js","webpack:///../util/color_spaces.js","webpack:///../expression/definitions/interpolate.js","webpack:///../expression/definitions/coalesce.js","webpack:///../expression/definitions/let.js","webpack:///../expression/definitions/at.js","webpack:///../expression/definitions/in.js","webpack:///../expression/definitions/index_of.js","webpack:///../expression/definitions/match.js","webpack:///../expression/definitions/case.js","webpack:///../expression/definitions/slice.js","webpack:///../expression/definitions/comparison.js","webpack:///../expression/definitions/number_format.js","webpack:///../expression/definitions/index.js","webpack:///../expression/definitions/length.js","webpack:///../util/result.js","webpack:///../util/properties.js","webpack:///../util/get_type.js","webpack:///../function/index.js","webpack:///../expression/index.js","webpack:///../function/convert.js","webpack:///../feature_filter/index.js","webpack:///../util/ref_properties.js","webpack:///../deref.js","webpack:///../error/validation_error.js","webpack:///../error/parsing_error.js","webpack:///../validate/validate_constants.js","webpack:///../util/unbundle_jsonlint.js","webpack:///../validate/validate_object.js","webpack:///../validate/validate_array.js","webpack:///../validate/validate_number.js","webpack:///../validate/validate_function.js","webpack:///../validate/validate_expression.js","webpack:///../validate/validate_enum.js","webpack:///../validate/validate_filter.js","webpack:///../validate/validate_property.js","webpack:///../validate/validate_paint_property.js","webpack:///../validate/validate_layout_property.js","webpack:///../validate/validate_layer.js","webpack:///../validate/validate_string.js","webpack:///../validate/validate_source.js","webpack:///../validate/validate_light.js","webpack:///../validate/validate_terrain.js","webpack:///../validate/validate_fog.js","webpack:///../validate/validate.js","webpack:///../validate/validate_boolean.js","webpack:///../validate/validate_color.js","webpack:///../validate/validate_formatted.js","webpack:///../validate/validate_image.js","webpack:///../validate/validate_glyphs_url.js","webpack:///../validate_style.min.js","webpack:///../../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","webpack:///../read_style.js","webpack:///../validate_style.js","webpack:///../validate_mapbox_api_supported.js","webpack:///../style-spec.js","webpack:///../src/util.js","webpack:///../src/stylefunction.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || maybeWeight == w.replace('-', sp)) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport GeometryType from '../geom/GeometryType.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryType.js\").default}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === GeometryType.POINT\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [opt_options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          // classifies an array of rings into polygons with outer rings and holes\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i + 1));\n          } else {\n            if (endss.length === 0) {\n              continue;\n            }\n            endss[endss.length - 1].push(ends[prevEndIndex]);\n          }\n          prevEndIndex = i + 1;\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom =\n          geometryType === GeometryType.POINT\n            ? new Point(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.LINE_STRING\n            ? new LineString(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.POLYGON\n            ? new Polygon(flatCoordinates, GeometryLayout.XY, ends)\n            : geometryType === GeometryType.MULTI_POINT\n            ? new MultiPoint(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.MULTI_LINE_STRING\n            ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      this.adaptOptions(opt_options)\n    );\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature, options));\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/GeometryType.js\").default} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  let geometryType;\n  if (type === 1) {\n    geometryType =\n      numEnds === 1 ? GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType =\n      numEnds === 1 ? GeometryType.LINE_STRING : GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMapInternal(map) {\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the backgrlound color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        equals(\n          asArray(target.style.backgroundColor),\n          asArray(opt_backgroundColor)\n        ))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n * @api\n */\nexport default {\n  /**\n   * Vector tiles are rendered as images. Great performance, but\n   * point symbols and texts are always rotated with the view and pixels are\n   * scaled during zoom animations\n   * @api\n   * @deprecated\n   */\n  IMAGE: 'image',\n  /**\n   * Polygon and line elements are rendered as images, so pixels\n   * are scaled during zoom animations. Point symbols and texts are accurately\n   * rendered as vectors and can stay upright on rotated views.\n   * @api\n   */\n  HYBRID: 'hybrid',\n  /**\n   * Everything is rendered as vectors. Use this mode for improved\n   * performance on vector tile layers with only a few rendered features (e.g.\n   * for highlighting a subset of features of another layer with the same\n   * source).\n   * @api\n   */\n  VECTOR: 'vector',\n};\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport TileState from '../../TileState.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [\n    ReplayType.POLYGON,\n    ReplayType.CIRCLE,\n    ReplayType.LINE_STRING,\n    ReplayType.IMAGE,\n    ReplayType.TEXT,\n  ],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': [\n    ReplayType.POLYGON,\n    ReplayType.CIRCLE,\n    ReplayType.LINE_STRING,\n    ReplayType.IMAGE,\n    ReplayType.TEXT,\n    ReplayType.DEFAULT,\n  ],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== VectorTileRenderType.VECTOR\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === VectorTileRenderType.VECTOR\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      builderState.dirty = false;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== VectorTileRenderType.VECTOR &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      function (resolve, reject) {\n        const layer =\n          /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n            this.getLayer()\n          );\n        const layerUid = getUid(layer);\n        const source = layer.getSource();\n        const projection = this.renderedProjection;\n        const projectionExtent = projection.getExtent();\n        const resolution = this.renderedResolution;\n        const tileGrid = source.getTileGridForProjection(projection);\n        const coordinate = applyTransform(\n          this.renderedPixelToCoordinateTransform_,\n          pixel.slice()\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n          coordinate,\n          resolution\n        );\n        let tile;\n        for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n          if (\n            tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n          ) {\n            tile = this.renderedTiles[i];\n            if (tile.getState() === TileState.LOADED) {\n              const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n              if (\n                source.getWrapX() &&\n                projection.canWrapX() &&\n                !containsExtent(projectionExtent, extent)\n              ) {\n                wrapX(coordinate, projection);\n              }\n              break;\n            }\n            tile = undefined;\n          }\n        }\n        if (!tile || tile.loadingSourceTiles > 0) {\n          resolve([]);\n          return;\n        }\n        const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        const corner = getTopLeft(extent);\n        const tilePixel = [\n          (coordinate[0] - corner[0]) / resolution,\n          (corner[1] - coordinate[1]) / resolution,\n        ];\n        const features = tile\n          .getSourceTiles()\n          .reduce(function (accumulator, sourceTile) {\n            return accumulator.concat(sourceTile.getFeatures());\n          }, []);\n        let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n        if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n          const tileSize = toSize(\n            tileGrid.getTileSize(tileGrid.getZForResolution(resolution))\n          );\n          const rotation = this.renderedRotation_;\n          const transforms = [\n            this.getRenderTransform(\n              tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n              resolution,\n              0,\n              HIT_DETECT_RESOLUTION,\n              tileSize[0] * HIT_DETECT_RESOLUTION,\n              tileSize[1] * HIT_DETECT_RESOLUTION,\n              0\n            ),\n          ];\n          hitDetectionImageData = createHitDetectionImageData(\n            tileSize,\n            transforms,\n            features,\n            layer.getStyleFunction(),\n            tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n            tile.getReplayState(layer).renderedResolution,\n            rotation\n          );\n          tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n        }\n        resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    super.renderFrame(frameState, target);\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const executorGroups = tile.executorGroups[getUid(layer)];\n      let clipped = false;\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        if (!executorGroup.hasExecutors(replayTypes)) {\n          // sourceTile has no instructions of the types we want to render\n          continue;\n        }\n        const currentZ = tile.tileCoord[0];\n        let currentClip;\n        if (!clipped) {\n          currentClip = executorGroup.getClipCoords(transform);\n          if (currentClip) {\n            context.save();\n\n            // Create a clip mask for regions in this low resolution tile that are\n            // already filled by a higher resolution tile\n            for (let j = 0, jj = clips.length; j < jj; ++j) {\n              const clip = clips[j];\n              if (currentZ < clipZs[j]) {\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher resolution tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n          }\n        }\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n        if (!clipped && currentClip) {\n          context.restore();\n          clips.push(currentClip);\n          clipZs.push(currentZ);\n          clipped = true;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === VectorTileRenderType.VECTOR) {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [opt_options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    if (options.renderMode === VectorTileRenderType.IMAGE) {\n      //FIXME deprecated - remove this check in v7.\n      //eslint-disable-next-line\n      console.warn('renderMode: \"image\" is deprecated. Option ignored.')\n      options.renderMode = undefined;\n    }\n    const renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(\n      renderMode == VectorTileRenderType.HYBRID ||\n        renderMode == VectorTileRenderType.VECTOR,\n      28\n    ); // `renderMode` must be `'hybrid'` or `'vector'`.\n\n    /**\n     * @private\n     * @type {import(\"./VectorTileRenderType.js\").default}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel map.getFeaturesAtPixel()}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {import(\"./VectorTileRenderType.js\").default} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      canvasPool.push(this.context_[key].canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {\n  createForProjection,\n  createXYZ,\n  extentFromProjection,\n} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      if (tileCache.containsKey(cacheKey)) {\n        const sourceTiles = tileCache.get(cacheKey).sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      tileGrid = createForProjection(\n        projection,\n        undefined,\n        sourceTileGrid\n          ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom())\n          : undefined\n      );\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// @flow\n\nexport default function (output: any, ...inputs: Array<any>) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>) {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate() {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined() {\n        return true;\n    }\n\n    serialize(): Array<mixed> {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n","// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON() {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): Array<mixed> {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize() {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize() {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","// @flow\n\nimport {Color} from './values.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: ?CanonicalTileID;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID() {\n        return this.canonical;\n    }\n\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {GeoJSON, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\n// minX, minY, maxX, maxY\ntype BBox = [number, number, number, number];\nconst EXTENT = 8192;\n\nfunction updateBBox(bbox: BBox, coord: Point) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): Array<mixed> {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script']);\n}\n","// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize() {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number) {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number) {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number) {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): Array<mixed> {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize() {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n\n    serialize() {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!haystack) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined() {\n        return true;\n    }\n\n    serialize() {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): Array<mixed> {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize() {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\n\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals = makeComparison('==', eq, eqCollate);\nexport const NotEquals = makeComparison('!=', neq, neqCollate);\nexport const LessThan = makeComparison('<', lt, ltCollate);\nexport const GreaterThan = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n","// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent';\n    currency?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? \"currency\" : \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\nimport type {Varargs} from '../compound_expression.js';\nimport type {ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    serialize() {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","// @flow\n\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","// @flow\n\nexport default function getType(val: mixed): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'MultiPoint' | 'LineString' | 'MultiLineString' | 'Polygon' | 'MultiPolygon',\n    +id?: any,\n    +properties: {[_: string]: any},\n    +patterns?: {[_: string]: {\"min\": string, \"mid\": string, \"max\": string}},\n    +geometry?: Array<Array<Point>>\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    skyRadialProgress?: number,\n    isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}) {\n        return ((new StylePropertyFunction(serialized._parameters, serialized._specification)): StylePropertyFunction<T>);\n    }\n\n    static serialize(input: StylePropertyFunction<T>) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && isFunction(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport default convertFunction;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nfunction convertFunction(parameters: any, propertySpec: StylePropertySpecification) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\n\ntype FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => boolean;\nexport type FeatureFilter ={filter: FilterExpression, needGeometry: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter};\n\nfunction isExpressionFilter(filter: any) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        const needGeometry = geometryNeeded(filter);\n        return {filter: (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry};\n    }\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n","\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","\nimport refProperties from './util/ref_properties.js';\n\nfunction deref(layer, parent) {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n\n    return result;\n}\n\nexport default derefLayers;\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n\n    return layers;\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: ?string;\n    line: ?number;\n\n    constructor(key: ?string, value: ?{ __line__: number }, message: string, identifier: ?string) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","\nimport ValidationError from '../error/validation_error.js';\n\nexport default function validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    } else {\n        return [];\n    }\n}\n","// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validateSpec from './validate.js';\n\nexport default function validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        } else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\n\nexport default function validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values,\n        \"minimum\": arraySpec.minimum,\n        \"maximum\": arraySpec.maximum\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n","\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nexport default function validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec) {\n        let specMin = valueSpec.minimum;\n        if (getType(valueSpec.minimum) === 'array') {\n            const i = options.arrayIndex;\n            specMin = valueSpec.minimum[i];\n        }\n        if (value < specMin) {\n            return [new ValidationError(key, value, `${value} is less than the minimum value ${specMin}`)];\n        }\n    }\n\n    if ('maximum' in valueSpec) {\n        let specMax = valueSpec.maximum;\n        if (getType(valueSpec.maximum) === 'array') {\n            const i = options.arrayIndex;\n            specMax = valueSpec.maximum[i];\n        }\n        if (value > specMax) {\n            return [new ValidationError(key, value, `${value} is greater than the maximum value ${specMax}`)];\n        }\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateNumber from './validate_number.js';\nimport {isExpression} from '../expression/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties.js';\n\nexport default function validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[value] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\n\nimport {createExpression, createPropertyExpression} from '../expression/index.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant.js';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nexport default function validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport validateExpression from './validate_expression.js';\nimport validateEnum from './validate_enum.js';\nimport getType from '../util/get_type.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport extend from '../util/extend.js';\nimport {isExpressionFilter} from '../feature_filter/index.js';\n\nexport default function validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: {value: 'boolean'}\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n    case 'within':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'object') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `object expected, ${type} found`));\n        }\n        break;\n    }\n    return errors;\n}\n","\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {isFunction} from '../function/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {supportsPropertyExpression} from '../util/properties.js';\n\nexport default function validateProperty(options, propertyType) {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","\nimport validateProperty from './validate_property.js';\n\nexport default function validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n","\nimport validateProperty from './validate_property.js';\n\nexport default function validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateFilter from './validate_filter.js';\nimport validatePaintProperty from './validate_paint_property.js';\nimport validateLayoutProperty from './validate_layout_property.js';\nimport validateSpec from './validate.js';\nimport extend from '../util/extend.js';\n\nexport default function validateLayer(options) {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (!(type === 'background' || type === 'sky')) {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nexport default function validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateEnum from './validate_enum.js';\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\nimport getType from '../util/get_type.js';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\nexport default function validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec,\n            objectElementValidators\n        });\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec,\n            objectElementValidators\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image']},\n            style,\n            styleSpec\n        });\n    }\n}\n\nfunction validatePromoteId({key, value}) {\n    if (getType(value) === 'string') {\n        return validateString({key, value});\n    } else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({key: `${key}.${prop}`, value: value[prop]}));\n        }\n        return errors;\n    }\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nexport default function validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nexport default function validateTerrain(options) {\n    const terrain = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    let errors = [];\n\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in terrain) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && terrainSpec[transitionMatch[1]] && terrainSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (terrainSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    if (!terrain.source) {\n        errors.push(new ValidationError(key, terrain, `terrain is missing required property \"source\"`));\n    } else {\n        const source = style.sources && style.sources[terrain.source];\n        const sourceType = source && unbundle(source.type);\n        if (!source) {\n            errors.push(new ValidationError(key, terrain.source, `source \"${terrain.source}\" not found`));\n        } else if (sourceType !== 'raster-dem') {\n            errors.push(new ValidationError(key, terrain.source, `terrain cannot be used with a source of type ${sourceType}, it only be used with a \"raster-dem\" source type`));\n        }\n    }\n\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\n\nexport default function validateFog(options) {\n    const fog = options.value;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const fogSpec = styleSpec.fog;\n    let errors = [];\n\n    const rootType = getType(fog);\n    if (fog === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('fog', fog, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in fog) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && fogSpec[transitionMatch[1]] && fogSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (fogSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: fogSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, fog[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","\nimport extend from '../util/extend.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isExpression} from '../expression/index.js';\nimport {isFunction} from '../function/index.js';\n\nimport validateFunction from './validate_function.js';\nimport validateExpression from './validate_expression.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateBoolean from './validate_boolean.js';\nimport validateNumber from './validate_number.js';\nimport validateColor from './validate_color.js';\nimport validateConstants from './validate_constants.js';\nimport validateEnum from './validate_enum.js';\nimport validateFilter from './validate_filter.js';\nimport validateLayer from './validate_layer.js';\nimport validateSource from './validate_source.js';\nimport validateLight from './validate_light.js';\nimport validateTerrain from './validate_terrain.js';\nimport validateFog from './validate_fog.js';\nimport validateString from './validate_string.js';\nimport validateFormatted from './validate_formatted.js';\nimport validateImage from './validate_image.js';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'terrain': validateTerrain,\n    'fog': validateFog,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage\n};\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\n\nexport default function validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nexport default function validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {parseCSSColor} from 'csscolorparser';\n\nexport default function validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","// @flow\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nexport default function validateFormatted(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nexport default function validateImage(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","\nimport ValidationError from '../error/validation_error.js';\nimport validateString from './validate_string.js';\n\nexport default function(options) {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","\nimport validateConstants from './validate/validate_constants.js';\nimport validate from './validate/validate.js';\nimport latestStyleSpec from './reference/latest.js';\nimport validateGlyphsURL from './validate/validate_glyphs_url.js';\n\nimport validateSource from './validate/validate_source.js';\nimport validateLight from './validate/validate_light.js';\nimport validateTerrain from './validate/validate_terrain.js';\nimport validateFog from './validate/validate_fog.js';\nimport validateLayer from './validate/validate_layer.js';\nimport validateFilter from './validate/validate_filter.js';\nimport validatePaintProperty from './validate/validate_paint_property.js';\nimport validateLayoutProperty from './validate/validate_layout_property.js';\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = latestStyleSpec) {\n\n    let errors = [];\n\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n\n    if (style.constants) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style.constants,\n            style,\n            styleSpec\n        }));\n    }\n\n    return sortErrors(errors);\n}\n\nvalidateStyleMin.source = wrapCleanErrors(validateSource);\nvalidateStyleMin.light = wrapCleanErrors(validateLight);\nvalidateStyleMin.terrain = wrapCleanErrors(validateTerrain);\nvalidateStyleMin.fog = wrapCleanErrors(validateFog);\nvalidateStyleMin.layer = wrapCleanErrors(validateLayer);\nvalidateStyleMin.filter = wrapCleanErrors(validateFilter);\nvalidateStyleMin.paintProperty = wrapCleanErrors(validatePaintProperty);\nvalidateStyleMin.layoutProperty = wrapCleanErrors(validateLayoutProperty);\n\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\n\nfunction wrapCleanErrors(inner) {\n    return function(...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\nexport default validateStyleMin;\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","import ParsingError from './error/parsing_error.js';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        } catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n","\nimport validateStyleMin from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style, styleSpec = v8) {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport const source = validateStyleMin.source;\nexport const light = validateStyleMin.light;\nexport const layer = validateStyleMin.layer;\nexport const filter = validateStyleMin.filter;\nexport const paintProperty = validateStyleMin.paintProperty;\nexport const layoutProperty = validateStyleMin.layoutProperty;\n","// @flow\n\nimport validateStyle from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\nimport ValidationError from './error/validation_error.js';\nimport getType from './util/get_type.js';\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: ?string, regex: RegExp): boolean {\n    if (!value || getType(value) !== 'string') return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: Object): number {\n    if (source.url) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: Object, keys: Array<*>, path: ?string): Array<?ValidationError> {\n    const allowed = new Set(keys);\n    const errors = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nconst acceptedSourceTypes = new Set([\"vector\", \"raster\", \"raster-dem\"]);\nfunction getSourceErrors(source: Object, i: number): Array<?ValidationError> {\n    const errors = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"type\" is required and must be one of \"vector\", \"raster\", \"raster-dem\"\n     */\n    if (!acceptedSourceTypes.has(String(source.type))) {\n        errors.push(new ValidationError(`sources[${i}].type`, source.type, `Expected one of [${Array.from(acceptedSourceTypes).join(\", \")}]`));\n    }\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!source.url || !isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}].url`, source.url, 'Expected a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getSourcesErrors(sources: Object): Array<?ValidationError> {\n    const errors = [];\n    let count = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            count = count + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    if (count > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n\n    return errors;\n}\n\nfunction getRootErrors(style: Object, specKeys: Array<any>): Array<?ValidationError> {\n    const errors = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: Object): Array<?ValidationError> {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    let errors = validateStyle(s, v8)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    if (s.sources) {\n        errors = errors.concat(getSourcesErrors(s.sources));\n    }\n\n    return errors;\n}\n","// @flow\n\ntype ExpressionType = 'data-driven' | 'cross-faded' | 'cross-faded-data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress' | 'sky-radial-progress'>;\n\ntype ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[_: string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest.js';\nimport format from './format.js';\nimport migrate from './migrate.js';\nimport composite from './composite.js';\nimport derefLayers from './deref.js';\nimport diff from './diff.js';\nimport ValidationError from './error/validation_error.js';\nimport ParsingError from './error/parsing_error.js';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression/index.js';\nimport featureFilter, {isExpressionFilter} from './feature_filter/index.js';\n\nimport convertFilter from './feature_filter/convert.js';\nimport Color from './util/color.js';\nimport {createFunction, isFunction} from './function/index.js';\nimport convertFunction from './function/convert.js';\nimport {eachSource, eachLayer, eachProperty} from './visit.js';\n\nimport validate from './validate_style.js';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported.js';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    derefLayers,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n\nvalidate.parsed = validate;\nvalidate.latest = validate;\n","import EventType from 'ol/events/EventType.js';\nimport { labelCache } from 'ol/render/canvas.js';\nimport { listen } from 'ol/events.js';\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\nexport function deg2rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nexport var defaultResolutions = (function () {\n    var resolutions = [];\n    for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n})();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n        return /** @type {?} */ (new OffscreenCanvas(width, height));\n    }\n    else {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n}\nexport function getZoomForResolution(resolution, resolutions) {\n    var i = 0;\n    var ii = resolutions.length;\n    for (; i < ii; ++i) {\n        var candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            var zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nvar hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        var textWithLetterSpacing = '';\n        var lines = text.split('\\n');\n        var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (var l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nvar measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return (getMeasureContext().measureText(text).width +\n        (text.length - 1) * letterSpacing);\n}\nvar measureCache = {};\nif (labelCache) {\n    // Only available when using ES modules\n    //@ts-ignore\n    listen(labelCache, EventType.CLEAR, function () {\n        measureCache = {};\n    });\n}\nexport function wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        var hardLines = text.split('\\n');\n        var lines = [];\n        for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    var wrappedText = measureCache[key];\n    if (!wrappedText) {\n        var words = text.split(' ');\n        if (words.length > 1) {\n            var ctx = getMeasureContext();\n            ctx.font = font;\n            var oneEm = ctx.measureText('M').width;\n            var maxWidth = oneEm * em;\n            var line = '';\n            var lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (var i = 0, ii = words.length; i < ii; ++i) {\n                var word = words[i];\n                var testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                }\n                else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (var i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                var line_1 = lines[i];\n                if (measureText(line_1, letterSpacing) < maxWidth * 0.35) {\n                    var prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    var nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line_1;\n                        i -= 1;\n                    }\n                    else {\n                        lines[i] = line_1 + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (var i = 0, ii = lines.length - 1; i < ii; ++i) {\n                var line_2 = lines[i];\n                var next = lines[i + 1];\n                if (measureText(line_2, letterSpacing) > maxWidth * 0.7 &&\n                    measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    var lineWords = line_2.split(' ');\n                    var lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        }\n        else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\n//# sourceMappingURL=util.js.map","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport mb2css from 'mapbox-to-css-font';\nimport { Color, featureFilter as createFilter, derefLayers, expression, function as fn, latest as spec, } from '@mapbox/mapbox-gl-style-spec';\nimport { applyLetterSpacing, createCanvas, defaultResolutions, deg2rad, getZoomForResolution, wrapText, } from './util.js';\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\nvar isFunction = fn.isFunction;\nvar convertFunction = fn.convertFunction;\nvar isExpression = expression.isExpression;\nvar createPropertyExpression = expression.createPropertyExpression;\nvar types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3,\n};\nvar anchor = {\n    'center': [0.5, 0.5],\n    'left': [0, 0.5],\n    'right': [1, 0.5],\n    'top': [0.5, 0],\n    'bottom': [0.5, 1],\n    'top-left': [0, 0],\n    'top-right': [1, 0],\n    'bottom-left': [0, 1],\n    'bottom-right': [1, 1],\n};\nvar expressionData = function (rawExpression, propertySpec) {\n    var compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value\n            .map(function (err) { return \"\".concat(err.key, \": \").concat(err.message); })\n            .join(', '));\n    }\n    return compiledExpression.value;\n};\nvar emptyObj = {};\nvar zoomObj = { zoom: 0 };\nvar renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {?} Value.\n */\nexport function getValue(layer, layoutOrPaint, property, zoom, feature, functionCache) {\n    var layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    var functions = functionCache[layerId];\n    if (!functions[property]) {\n        var value_1 = (layer[layoutOrPaint] || emptyObj)[property];\n        var propertySpec = spec[\"\".concat(layoutOrPaint, \"_\").concat(layer.type)][property];\n        if (value_1 === undefined) {\n            value_1 = propertySpec.default;\n        }\n        var isExpr = isExpression(value_1);\n        if (!isExpr && isFunction(value_1)) {\n            value_1 = convertFunction(value_1, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            var compiledExpression = expressionData(value_1, propertySpec);\n            functions[property] =\n                compiledExpression.evaluate.bind(compiledExpression);\n        }\n        else {\n            if (propertySpec.type == 'color') {\n                value_1 = Color.parse(value_1);\n            }\n            functions[property] = function () {\n                return value_1;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature);\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nvar renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n    renderTransparentEnabled = enabled;\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} opacity Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        var a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0\n            ? 'transparent'\n            : 'rgba(' +\n                Math.round((color.r * 255) / a) +\n                ',' +\n                Math.round((color.g * 255) / a) +\n                ',' +\n                Math.round((color.b * 255) / a) +\n                ',' +\n                a * opacity +\n                ')';\n    }\n    return color;\n}\nvar templateRegEx = /^([^]*)\\{(.*)\\}([^]*)$/;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    var parts;\n    do {\n        parts = text.match(templateRegEx);\n        if (parts) {\n            var value = properties[parts[2]] || '';\n            text = parts[1] + value + parts[3];\n        }\n    } while (parts);\n    return text;\n}\nvar recordLayer = false;\n/**\n * ```js\n * import {recordStyleLayer} from 'ol-mapbox-style/dist/stylefunction';\n * ```\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} [record=false] Recording of the style layer is on.\n */\nexport function recordStyleLayer(record) {\n    recordLayer = record;\n}\n/**\n * ```js\n * import stylefunction from 'ol-mapbox-style/dist/stylefunction';\n * ```\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} source `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} [resolutions=[78271.51696402048, 39135.75848201024, 19567.87924100512, 9783.93962050256, 4891.96981025128, 2445.98490512564, 1222.99245256282, 611.49622628141, 305.748113140705, 152.8740565703525, 76.43702828517625, 38.21851414258813, 19.109257071294063, 9.554628535647032, 4.777314267823516, 2.388657133911758, 1.194328566955879, 0.5971642834779395, 0.29858214173896974, 0.14929107086948487, 0.07464553543474244]]\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} [spriteData=undefined] Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} [spriteImageUrl=undefined] Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>):Array<string>} [getFonts=undefined] Function that\n * receives a font stack as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport default function (olLayer, glStyle, source, resolutions, spriteData, spriteImageUrl, getFonts) {\n    if (resolutions === void 0) { resolutions = defaultResolutions; }\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    var spriteImage, spriteImgSize;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            var img_1 = new Image();\n            img_1.crossOrigin = 'anonymous';\n            img_1.onload = function () {\n                spriteImage = img_1;\n                spriteImgSize = [img_1.width, img_1.height];\n                olLayer.changed();\n                img_1.onload = null;\n            };\n            img_1.src = spriteImageUrl;\n        }\n        else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n            var worker = /** @type {*} */ (self);\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl,\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' &&\n                    event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImgSize = [spriteImage.width, spriteImage.height];\n                }\n            });\n        }\n    }\n    var allLayers = derefLayers(glStyle.layers);\n    var layersBySourceLayer = {};\n    var mapboxLayers = [];\n    var iconImageCache = {};\n    var patternCache = {};\n    var functionCache = {};\n    var filterCache = {};\n    var mapboxSource;\n    for (var i = 0, ii = allLayers.length; i < ii; ++i) {\n        var layer = allLayers[i];\n        var layerId = layer.id;\n        if ((typeof source == 'string' && layer.source == source) ||\n            source.indexOf(layerId) !== -1) {\n            var sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                var source_1 = glStyle.sources[mapboxSource];\n                if (!source_1) {\n                    throw new Error(\"Source \\\"\".concat(mapboxSource, \"\\\" is not defined\"));\n                }\n                var type = source_1.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(\"Source \\\"\".concat(mapboxSource, \"\\\" is not of type \\\"vector\\\" or \\\"geojson\\\", but \\\"\").concat(type, \"\\\"\"));\n                }\n            }\n            var layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i,\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    var textHalo = new Stroke();\n    var textColor = new Fill();\n    var styles = [];\n    var styleFunction = function (feature, resolution) {\n        var properties = feature.getProperties();\n        var layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return;\n        }\n        var zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        var type = types[feature.getGeometry().getType()];\n        var f = {\n            properties: properties,\n            type: type,\n        };\n        var stylesLength = -1;\n        var featureBelongsToLayer;\n        var _loop_1 = function (i, ii) {\n            var layerData = layers[i];\n            var layer = layerData.layer;\n            var layerId = layer.id;\n            var layout = layer.layout || emptyObj;\n            var paint = layer.paint || emptyObj;\n            if (layout.visibility === 'none' ||\n                ('minzoom' in layer && zoom < layer.minzoom) ||\n                ('maxzoom' in layer && zoom >= layer.maxzoom)) {\n                return \"continue\";\n            }\n            var filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                var color = void 0, opacity = void 0, fill = void 0, stroke = void 0, strokeColor = void 0, style = void 0;\n                var index = layerData.index;\n                if (type == 3 &&\n                    (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache);\n                    if (layer.type + '-pattern' in paint) {\n                        var fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache);\n                        if (fillIcon) {\n                            var icon_1 = typeof fillIcon === 'string'\n                                ? fromTemplate(fillIcon, properties)\n                                : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon_1]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style ||\n                                    !style.getFill() ||\n                                    style.getStroke() ||\n                                    style.getText()) {\n                                    style = new Style({\n                                        fill: new Fill(),\n                                    });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                var icon_cache_key = icon_1 + '.' + opacity;\n                                var pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    var spriteImageData = spriteData[icon_1];\n                                    var canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    var ctx = /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    }\n                    else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache), opacity);\n                        if (color) {\n                            if (layer.type + '-outline-color' in paint) {\n                                strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache), opacity);\n                            }\n                            if (!strokeColor) {\n                                strokeColor = color;\n                            }\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style ||\n                                !(style.getFill() && style.getStroke()) ||\n                                style.getText()) {\n                                style = new Style({\n                                    fill: new Fill(),\n                                    stroke: new Stroke(),\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            fill = style.getFill();\n                            fill.setColor(color);\n                            stroke = style.getStroke();\n                            stroke.setColor(strokeColor);\n                            stroke.setWidth(0.5);\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    color =\n                        !('line-pattern' in paint) && 'line-color' in paint\n                            ? colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache))\n                            : undefined;\n                    var width_1 = getValue(layer, 'paint', 'line-width', zoom, f, functionCache);\n                    if (color && width_1 > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style ||\n                            !style.getStroke() ||\n                            style.getFill() ||\n                            style.getText()) {\n                            style = new Style({\n                                stroke: new Stroke(),\n                            });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache));\n                        stroke.setColor(color);\n                        stroke.setWidth(width_1);\n                        stroke.setLineDash(paint['line-dasharray']\n                            ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache).map(function (x) {\n                                return x * width_1;\n                            })\n                            : null);\n                        style.setZIndex(index);\n                    }\n                }\n                var hasImage = false;\n                var text = null;\n                var placementAngle = 0;\n                var icon = void 0, iconImg = void 0, skipLabel = void 0;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    var iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache);\n                    if (iconImage) {\n                        icon =\n                            typeof iconImage === 'string'\n                                ? fromTemplate(iconImage, properties)\n                                : iconImage.toString();\n                        var styleGeom = undefined;\n                        if (spriteImage && spriteData && spriteData[icon]) {\n                            var iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache);\n                            if (type == 2) {\n                                var geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    var extent = geom.getExtent();\n                                    var size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        var midpoint = geom.getType() === 'MultiLineString'\n                                            ? geom.getFlatMidpoints()\n                                            : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [NaN, NaN];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], {}, null);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        var placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache);\n                                        if (placement === 'line' &&\n                                            iconRotationAlignment === 'map') {\n                                            var stride = geom.getStride();\n                                            var coordinates = geom.getFlatCoordinates();\n                                            for (var i_1 = 0, ii_1 = coordinates.length - stride; i_1 < ii_1; i_1 += stride) {\n                                                var x1 = coordinates[i_1];\n                                                var y1 = coordinates[i_1 + 1];\n                                                var x2 = coordinates[i_1 + stride];\n                                                var y2 = coordinates[i_1 + stride + 1];\n                                                var minX = Math.min(x1, x2);\n                                                var minY = Math.min(y1, y2);\n                                                var maxX = Math.max(x1, x2);\n                                                var maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX &&\n                                                    midpoint[0] <= maxX &&\n                                                    midpoint[1] >= minY &&\n                                                    midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                var iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache);\n                                var iconColor = paint['icon-color'] !== undefined\n                                    ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache)\n                                    : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    var icon_cache_key = icon + '.' + iconSize;\n                                    if (iconColor !== null) {\n                                        icon_cache_key += '.' + iconColor;\n                                    }\n                                    iconImg = iconImageCache[icon_cache_key];\n                                    if (!iconImg) {\n                                        var spriteImageData = spriteData[icon];\n                                        iconImg = new Icon({\n                                            color: iconColor\n                                                ? [\n                                                    iconColor.r * 255,\n                                                    iconColor.g * 255,\n                                                    iconColor.b * 255,\n                                                    iconColor.a,\n                                                ]\n                                                : undefined,\n                                            img: spriteImage,\n                                            imgSize: spriteImgSize,\n                                            size: [spriteImageData.width, spriteImageData.height],\n                                            offset: [spriteImageData.x, spriteImageData.y],\n                                            rotateWithView: iconRotationAlignment === 'map',\n                                            scale: iconSize / spriteImageData.pixelRatio,\n                                        });\n                                        iconImageCache[icon_cache_key] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style ||\n                                        !style.getImage() ||\n                                        style.getFill() ||\n                                        style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle +\n                                        deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            }\n                            else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && 'circle-radius' in paint) {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style ||\n                        !style.getImage() ||\n                        style.getFill() ||\n                        style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    var circleRadius = getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache);\n                    var circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache));\n                    var circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache));\n                    var circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache);\n                    var cache_key = circleRadius +\n                        '.' +\n                        circleStrokeColor +\n                        '.' +\n                        circleColor +\n                        '.' +\n                        circleStrokeWidth;\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            stroke: circleStrokeColor && circleStrokeWidth > 0\n                                ? new Stroke({\n                                    width: circleStrokeWidth,\n                                    color: circleStrokeColor,\n                                })\n                                : undefined,\n                            fill: circleColor\n                                ? new Fill({\n                                    color: circleColor,\n                                })\n                                : undefined,\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                var label = void 0;\n                if ('text-field' in layout) {\n                    var textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache).toString();\n                    label = fromTemplate(textField, properties).trim();\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style ||\n                            !style.getText() ||\n                            style.getFill() ||\n                            style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    if (!style.getText()) {\n                        style.setText(text ||\n                            new Text({\n                                padding: [2, 2, 2, 2],\n                            }));\n                    }\n                    text = style.getText();\n                    var textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache));\n                    var fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache);\n                    var textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache);\n                    var font = mb2css(getFonts ? getFonts(fontArray) : fontArray, textSize, textLineHeight);\n                    var textTransform = layout['text-transform'];\n                    if (textTransform == 'uppercase') {\n                        label = label.toUpperCase();\n                    }\n                    else if (textTransform == 'lowercase') {\n                        label = label.toLowerCase();\n                    }\n                    var maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache);\n                    var letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache);\n                    var wrappedLabel = type == 2\n                        ? applyLetterSpacing(label, letterSpacing)\n                        : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache)));\n                    var textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache);\n                    var placement = hasImage || type == 1\n                        ? 'point'\n                        : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache);\n                    text.setPlacement(placement);\n                    var textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache);\n                    var textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache);\n                    var textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache);\n                    // Text offset has to take halo width and line height into account\n                    var vOffset = 0;\n                    var hOffset = 0;\n                    if (placement == 'point') {\n                        var textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        }\n                        else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        text.setTextAlign(textAlign);\n                        var textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    }\n                    else {\n                        text.setMaxAngle((deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache)) *\n                            label.length) /\n                            wrappedLabel.length);\n                        text.setTextAlign();\n                        text.setRotateWithView(false);\n                    }\n                    var textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache), opacity));\n                    text.setFill(textColor);\n                    var haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache), opacity);\n                    if (haloColor) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        var halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    }\n                    else {\n                        text.setStroke(undefined);\n                    }\n                    var textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache);\n                    var padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        };\n        for (var i = 0, ii = layers.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if (typeof feature.set === 'function') {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                }\n                else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    return styleFunction;\n}\nexport { colorWithOpacity as _colorWithOpacity, evaluateFilter as _evaluateFilter, fromTemplate as _fromTemplate, getValue as _getValue, };\n//# sourceMappingURL=stylefunction.js.map","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport styleFunction from 'ol-mapbox-style/dist/stylefunction.js';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {getTilePriority as tilePriorityFunction} from '../src/ol/TileQueue.js';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  openmaptiles: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/topo/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            styleFunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    ),\n  () => worker.postMessage({action: 'requestRender'})\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState)\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel)\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach(\n    (layer) => layer.getRenderer().context && layer.renderDeclutter(frameState)\n  );\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData]\n  );\n});\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","module","obj","spaces","JSON","stringify","getSerialize","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","split","maybeWeight","toLowerCase","w","pop","test","replace","fontFamily","Pbf","ieee754","require","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","define","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","PI","abstract","uidCounter_","getUid","ol_uid","assign","Object","target","var_sources","TypeError","output","arguments","source","hasOwnProperty","object","property","values","isEmpty","Projection","options","code_","code","units_","units","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","func","clamp","cosh","y","log2","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","squaredDistance","lerp","toFixed","decimals","factor","round","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","resolution","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","add","destination","transformFn","sourceCode","getCode","destinationCode","AssertionError","message","name","assert","assertion","errorCode","opt_extent","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","equals","extendCoordinate","extendXY","getBottomLeft","getBottomRight","getCenter","getCorner","corner","Corner","getTopLeft","getTopRight","getHeight","getIntersection","intersection","intersects","getWidth","applyTransform","opt_stops","coordinates","width","xs","ys","_boundingExtentXYs","cloneTransform","identityTransform","addProjection","projection","addProj","addTransformFunc","get","projectionLike","addEquivalentProjections","projections","forEach","addProjections","equivalent","projection1","projection2","equalUnits","getUnits","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","transform","getTransformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","userProjection","fromUserExtent","destProjection","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","opt_options","getProjection","readProjection","setWorldExtent","featureProjection","adaptOptions","feature","features","geometry","BaseEvent","propagationStopped","defaultPrevented","numberSafeCompareFunction","reverseSubArray","begin","tmp","extend","extension","arr1","arr2","len1","VOID","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","opt_type","index","Disposable","disposed","disposeInternal","listen","opt_this","opt_once","bind","originalListener","eventsKey","addEventListener","listenOnce","unlistenByKey","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","dispatchEvent","EventType","ol_key","unByKey","EventTarget","transformStringDiv","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","eventType","ObjectEventType","opt_silent","notify","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","tmp_","passive","defineProperty","window","error","reset","multiply","transform1","transform2","a1","c1","d1","e1","f1","a2","c2","d2","e2","f2","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","mat","det","toString","transformString","node","document","createElement","transform2D","opt_dest","dest","j","rotate","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","getStrideForLayout","layout","GeometryLayout","SimpleGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","opt_layout","nesting","getLayoutForStride","changed","getStride","opt_sy","opt_anchor","getExtent","translate","Geometry","lastResult","lastArgs","lastThis","called","extentRevision_","simplifyTransformedInternal","revision","opt_transform","getSimplifiedGeometry","clone","nextArgs","arrayEquals","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","closestPointXY","computeExtent","returnOrUpdate","tolerance","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","composeTransform","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","callback","ret","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","interpolatePoint","fraction","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","lineString","applyProperties","opt_extrapolate","getCoordinateAt","GeometryType","setLayout","MultiLineString","ends_","getLayout","lineStrings","multiLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","midpoints","intersectsLineStringArray","Point","deflateCoordinate","MultiPoint","multiPoint","points","linearRing","twiceArea","linearRings","area","LinearRing","linearRingArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","linearRingss","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","getEnds","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getFlatInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","RenderFeature","properties","id","styleFunction","id_","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","getEndss","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","MVT","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","cmd","coordsLen","currentEnd","cmdLen","rawFeature","readRawGeometry_","geometryType","numEnds","getGeometryType","geom","prevEndIndex","ctor","setGeometryName","transformed","equivalentProjection","power","transformGeometryWithOptions","setGeometry","setId","FormatType","PBF","pbfLayers","pbfLayer","setExtent","createFeature_","DROP","TileQueue","tilePriorityFunction","tileChangeCallback","element","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","state","getState","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","inView","layerState","viewState","visible","minResolution","maxResolution","zoom","minZoom","maxZoom","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","addChangeListener","LayerProperty","handleSourcePropertyChange_","setSource","opt_array","array","opt_states","states","getLayerState","getSource","SourceState","handleSourceChange_","pixel","getFeatures","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","dispose","BaseLayer","background_","background","opacity","zIndex","className_","className","state_","opt_managed","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","opt_background","zindex","toSize","opt_size","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scaleArray_","displacement_","displacement","getScale","getRotation","getRotateWithView","getDisplacement","pixelRatio","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","g","exec","hasAlpha","parseInt","substr","normalize","Number","fromStringInternal_","asArray","asColorLike","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","labelCache","setSize","console","warn","measureFont","measureElement","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","getKeys","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureAndCacheTextWidth","drawImageOrLabel","context","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","CircleStyle","fill","radius","stroke","getFill","getStroke","getRadius","setOpacity","radius_","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","points_","radius1","radius2_","radius2","angle_","stroke_","size_","renderOptions_","getPoints","getRadius2","getAngle","createHitDetectionCanvas_","image","renderOptions","draw_","ImageState","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","strokeStyle","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","getImage","arc","startAngle","step","angle0","radiusC","lineTo","closePath","Fill","color_","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","defaultStyles","createDefaultStyle","Property","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","declutterTree","RBush","renderDeclutter","renderOrder","opt_style","styles","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","opt_declutterImageWithText","textStyle","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","tmpCoord","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","getType","builderBegin","myEnds","drawCustomCoordinates_","CanvasInstruction","appendFlatPointCoordinates","endGeometry","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","opt_sharedData","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","origin","getOrigin","getPixelRatio","getScaleArray","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","BATCH_CONSTRUCTORS","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","placement","TextPlacement","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","beg","filter","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","p0","p1","p2","p3","flatEnd","textAlign","flatOffset","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","offsetY","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","atan2","delta","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","beginPath","moveTo","setStrokeStyle_","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","contextScale","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","repeatSize","createLabel","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","coords","declutterImageWithText","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","args","imageArgs","imageDeclutterBox","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","cc","part","execute_","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","clip","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","hitExtent","clearRect","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","featureCallback","imageData","getImageData","idx","executor","zs","executeHitDetection","opt_builderTypes","builderTypes","execute","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","matches","renderIfReadyAndVisible","imageState","getLayer","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getBackground","opt_backgroundColor","layerClassName","getClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","hasListener","dispatchRenderEvent_","center","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","pixelContext","pixelCanvas","err","TileRange","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","z","getTile","getPreload","setState","isDrawableTile","getInterimTile","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tileResolution","getResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","uid","inTransition","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","toTransformString","useContainer","clipUnrotated","getInterpolate","preRender","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","postRender","cssOpacity","gutter","getTileImage","alphaChanged","animate","endTransition","canExpireCache","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","preload","opt_tileCallback","wantedTiles","tileQueue","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","simpleGeometry","transformGeom2D","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","src","crossOrigin","maxCacheSize","expire","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","taintedTestContext","IconImage","unlisten_","imageState_","src_","tainted_","unlistenImage_","dispatchChangeEvent_","replaceColor_","isTainted_","fillRect","handleImageError_","handleImageLoad_","ctx","globalCompositeOperation","imgData","putImageData","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","getSrc","getImageState","iconImageSize","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","getBuilder","textReplay","drawText","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","drawCustom","getHitDetectionRenderer","getGeometries","wrapX","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","getWorldsAway","IMAGE_REPLAYS","ReplayType","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","ViewHint","wantedResolution","prepareTile","Date","now","getRenderMode","VectorTileRenderType","renderTileImage_","executorGroups","hasContext","layerRevision","getRenderOrder","builderState","getReplayState","dirty","renderedRenderOrder","getDeclutter","sourceTileGrid","getTileGrid","tileExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","getRenderBuffer","bufferedExtent","CanvasBuilderGroup","declutterBuilderGroup","getSquaredRenderTolerance","getStyleFunction","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","getOverlaps","boundingExtent","getId","lastIndexOf","item","executorGroup","forEachFeatureAtCoordinate","reject","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","reduce","accumulator","concat","animatingOrInteracting_","tileSize","getTileSize","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","setColor","setText","getImageSize","imgContext","setImage","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getRenderTransform","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","clipped","hasExecutors","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","resetTransform","scaleTransform","pixelScale","translateTransform","VectorTileLayer","renderMode_","setPreload","setUseInterimTilesOnError","setBackground","TileProperty","easeIn","Tile","interimTile","transition_","transitionStarts_","prev","VectorTile","format","tileLoadFunction","format_","features_","loader_","tileLoadFunction_","url_","setFeatures","loader","opt_tileCoord","getKeyZXY","fromKey","TileCache","peekLast","release","peekFirstKey","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","adaptAttributions","attributionLike","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","tmpTileCoord","TileGrid","zoomFactor","resolutions_","resolutions","opt_func","opt_strict","compare","every","currentVal","res","isSorted","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","direction","linearFindNearest","fullTileRanges","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_maxResolution","createForProjection","opt_corner","createForExtent","extentFromProjection","half","getMetersPerUnit","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","containsKey","getResolutions","getDefaultTileGrid","setDefaultTileGrid","ratio","opt_projection","isGlobal","getFullTileRange","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getPrototypeOf","TileEventType","pruneExceptNewestZ","setKey","charCode","startCharCode","stopCharCode","stop","expandUrl","setTileUrlFunction","canvasPool","VectorRenderTile","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","onerror","send","xyzOptions","gridOptions","createXYZ","defaultLoadFunction","sourceTileCache","tileClass","tileGrids_","tileFeatures","candidate","usedSourceTiles","acc","cacheKey","bufferExtent","sourceExtent","sourceZ","forEachTileCoord","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","getTileCoordForTileUrlFunction","empty","newTile","refreshInterimChain","setLoader","getFormat","onLoad","onError","Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","root","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","RangeError","mapDomain","string","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","out","basic","oldi","baseMinusT","codePoint","inputLength","bias","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","arg","prop","qs","sep","eq","regexp","maxKeys","kstr","vstr","decodeURIComponent","stringifyPrimitive","isFinite","ks","encodeURIComponent","parse","require$$0","require$$1","Url","protocol","slashes","auth","host","port","hostname","hash","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","urlParse","parseQueryString","slashesDenoteHost","util","queryIndex","splitter","uSplit","rest","trim","simplePath","querystring","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","ae","esc","escape","qm","charAt","relative","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","isAbsolute","constructor","bindings","Scope","parent","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","expected","checkSubtype","isValidType","provided","allowedTypes","isValidNativeType","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","css_str","iv","op","ep","fname","params","toArray","rgba","parseCSSColor","Color","sensitivity","diacriticSensitive","Intl","locale","usage","collator","lhs","resolvedLocale","sections","section","serialize","serialized","Formatted","FormattedSection","unformatted","ResolvedImage","validateRGBA","isValue","mixed","typeOf","evaluate","eachChild","outputDefined","Literal","types","number","boolean","RuntimeError","parsed","Assertion","evaluatedContent","firstArg","nextTokenMayBeObject","textColor","lastExpression","content","FormatExpression","evaluatedImageName","ImageExpression","valueToString","child","Coercion","geometryTypes","canonicalID","parseColor","cached","_parseColorCache","_evaluate","definition","CompoundExpression","availableOverloads","overloads","signature","signatureContext","ParsingContext","parsedArgs","argParseFailed","expectedType","signatures","actualTypes","registry","Collator","caseSensitive","CollatorExpression","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","canonical","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","q1","q2","det1","det2","lineIntersectPolygon","v1","v2","vectorP","vectorQ","lineIntersectLine","perp","twoSided","lineStringWithinPolygon","line","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","geojson","Within","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var","scope","_parse","expr","typeAnnotation","Expr","actual","annotate","isConstant","ec","ParsingError","expression","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","stops","lastIndex","lowerIndex","upperIndex","currentIndex","nextValue","labels","outputs","stopCount","outputType","labelKey","valueKey","Step","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","solve","from","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","interpolateNumber","hcl","hclColor","lower","upper","Interpolate","outputLower","outputUpper","operator","interpolation","exponentialInterpolation","ub","controlPoints","lowerValue","upperValue","difference","progress","argCount","requestedImageName","Coalesce","needsAnnotation","Let","At","In","fromIndex","IndexOf","cases","otherwise","groupedByOutput","outputLookup","outputIndex","coerceLabel","labelContext","inputType","Match","branches","Case","beginIndex","endIndex","Slice","isComparableType","eqCollate","makeComparison","isOrderComparison","rhs","lt","compareBasic","compareWithCollator","Comparison","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","currency","minimumFractionDigits","minFractionDigits","maximumFractionDigits","maxFractionDigits","NumberFormat","expressions","Length","varargs","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","typeToString","isSupportedScript","propertySpec","isFunction","evaluateWithoutErrorHandling","availableImages","featureState","formattedSection","_enumValues","_warningHistory","isExpression","createExpression","parser","enum","formatted","resolvedImage","getExpectedType","StyleExpression","_styleExpression","globals","interpolationFactor","createPropertyExpression","isZoomConstant","zoomCurve","findZoomCurve","ZoomConstantExpression","interpolationType","ZoomDependentExpression","childResult","convertLiteral","convertFunction","parameters","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","default","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","getFallback","defaultValue","coalesce","curve","re","literal","isExpressionFilter","filterSpec","createFilter","needGeometry","convertFilter","compiled","geometryNeeded","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","deref","refProperties","identifier","validateConstants","constants","ValidationError","unbundle","deepUnbundle","unbundledValue","validateObject","elementSpecs","elementValidators","styleSpec","elementSpecKey","objectKey","elementSpec","validateElement","valueSpec","validateArray","arraySpec","validateArrayElement","arrayElementSpec","arrayIndex","validateNumber","specMin","specMax","validateFunction","functionValueSpec","functionType","stopDomainValues","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","objectElementValidators","arrayElementValidator","validate","previousStopDomainZoom","previousStopDomainValue","validateStopDomainValue","reportValue","stopKeyType","validateExpression","expressionObj","validateEnum","validateFilter","expressionContext","validateNonExpressionFilter","validateProperty","propertyType","propertyKey","layerSpec","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","ref","layerId","otherLayer","sourceType","layerType","paint","validateString","promoteId","validateSource","reduceExpr","validateLight","lightSpec","rootType","validateTerrain","terrain","terrainSpec","validateFog","fog","fogSpec","VALIDATORS","validateStyleMin","glyphs","sortErrors","wrapCleanErrors","inner","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","__line__","first_line","enumerable","table","defaultActions","parseError","recoverable","vstack","lstack","TERROR","EOF","lexer","create","sharedState","setInput","yylloc","yyloc","ranges","lex","token","symbol","action","newState","yyval","errStr","showPosition","loc","last_line","first_column","last_column","_input","_more","_backtrack","matched","conditionStack","ch","unput","oldLines","more","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","tempMatch","rules","_currentRules","flex","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","readStyle","jsonlint","validateStyle","Set","rendererTransform","worker","sources","landcover","VectorTileSource","contours","openmaptiles","tileCenter","postMessage","fetch","json","styleJson","currentSource","buckets","spriteUrl","sprite","spriteImageUrl","spriteJson","bucket","getTilesLoading","reprioritize","loadMoreTiles","transferToImageBitmap","observables","getProperties"],"sourceRoot":""}